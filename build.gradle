buildscript {
    repositories {
        mavenLocal()
	mavenCentral()
        maven { 
		credentials {
			username nexusUser
			password nexusPassword
		}
		url nexusReleaseURL
	}
	maven {
		credentials {
			username nexusUser
			password nexusPassword
		}
		url nexusSnapshotURL
	}
    }
    dependencies{
        classpath 'de.abas.esdk:gradlePlugin:0.4.8-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "eclipse"
    id "maven-publish"
    id 'com.palantir.git-version' version '0.5.2'
}
apply plugin: 'made-plugin'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
	credentials {
		username nexusUser
		password nexusPassword
	}
	url nexusReleaseURL
    }
    maven {
	credentials {
		username nexusUser
		password nexusPassword
	}
	url nexusSnapshotURL
    }
    maven { url "http://"+NEXUS_HOST+":"+NEXUS_PORT+"/nexus/content/repositories/"+NEXUS_NAME }
}

made {
    app {
        name="sparePartsCatalogueApp"
        vendorId="ag"
        appId="spare"
        entryPoints = [
        "java:de.abas.custom.spareParts.catalogue.Main"
        ]
        shared=true
        infosystems = ["IS.OW1.REPLACEMENTCATALOGUE"]
        tables = ["Replacement"]
	    data = [ "data.json" ]
    }

    abas {
        homeDir = ABAS_HOMEDIR
        clientDir = ABAS_CLIENTDIR
        clientId = ABAS_CLIENTID
        edpHost = EDP_HOST
        edpPort = EDP_PORT.toInteger()
        edpUser = EDP_USER
        edpPassword = EDP_PASSWORD
    }

    nexus {
        nexusHost = NEXUS_HOST
        nexusPort = NEXUS_PORT.toInteger()
        nexusRepoName = NEXUS_NAME
        nexusPassword = NEXUS_PASSWORD
    }

    ssh {
        host = SSH_HOST
        port = SSH_PORT.toInteger()
        user = SSH_USER
        password = SSH_PASSWORD
        key = SSH_KEY
    }
    installType = "SSH"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = "UTF-8"
}

configurations { compile.extendsFrom provided }

group='de.abas.esdk.app'
def versionString = gitVersion().toString()
if (versionString.contains("-")) {
    version versionString.split("-")[0].substring(1) + "-SNAPSHOT"
} else {
    version versionString.substring(1)
}

publishing {
    publications {
        mavenJava(MavenPublication) { from components.java }
        all {
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each { it.scope*.value = 'compile'}
            }
        }
    }
    repositories {
        if(project.hasProperty("nexusSnapshotURL") && project.hasProperty("nexusReleaseURL")
                && project.hasProperty("nexusUser") && project.hasProperty("nexusPassword")){
            if(project.version.endsWith('-SNAPSHOT')) {
                maven {
                    url nexusSnapshotURL
                    credentials {
                        username nexusUser
                        password nexusPassword
                    }
                }
            } else {
                maven {
                    url nexusReleaseURL
                    credentials {
                        username nexusUser
                        password nexusPassword
                    }
                }
            }
        }
    }
}

dependencies {
    provided 'de.abas.homedir:log4j:1.0.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}
