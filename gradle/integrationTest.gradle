// configure integTests
sourceSets {
    integTest {
        compileClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.integTest.output
    }
}

dependencies {
    integTestCompile configurations.testCompile
    integTestRuntime configurations.testRuntime
}

eclipse {
    classpath {
        plusConfigurations += [
            configurations.integTestCompile
        ]
    }
}

tasks.withType(Test) {
    environment 'EDP_HOST',         EDP_HOST
    environment 'EDP_PORT',         EDP_PORT
    environment 'EDP_PASSWORD',     EDP_PASSWORD
    environment 'EDP_CLIENT',   EDP_CLIENT
}

task integTest(type: Test) {
    outputs.upToDateWhen { false }
    description = "Executes the integration tests."
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    mustRunAfter test
    reports.html.destination = file("$buildDir/reports/integTest")
}

task verify(type: Test) {
    description = "Executes unit and integration tests."
    dependsOn test, integTest
}


apply plugin: "sonar-runner"

sonarRunner {
    sonarProperties {
        property "sonar.host.url", sonarHost
        property "sonar.jdbc.url", "jdbc:postgresql://localhost:5435/sonar"
        property "sonar.jdbc.driverClassName", "com.postgresql.Driver"
        property "sonar.jdbc.username", sonarUser
        property "sonar.jdbc.password", sonarPassword
        properties["sonar.tests"] += sourceSets.integTest.allSource.srcDirs
    }
}
